name: sharding-repl-cache

services:
  #сервер конфигурации
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest # docker образ
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",  #запуск в режиме конфигурации
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #1-й шард, 1-я репл
  shard11:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
      - mongos_router
    container_name: shard11
    restart: always
    ports:
      - "27030:27018"
    networks:
      app-network:
        ipv4_address: 173.17.1.9
    volumes:
      - shard11-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard1", #название шарда (replicaset'а)
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #1-й шард, 2-я репл
  shard12:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
      - mongos_router
    container_name: shard12
    restart: always
    ports:
      - "27031:27018"
    networks:
      app-network:
        ipv4_address: 173.17.1.10
    volumes:
      - shard12-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard1", #название шарда (replicaset'а)
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  
  #1-й шард, 3-я репл
  shard13:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
      - mongos_router
    container_name: shard13
    restart: always
    ports:
      - "27032:27018"
    networks:
      app-network:
        ipv4_address: 173.17.1.11
    volumes:
      - shard13-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard1", #название шарда (replicaset'а)
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #2-й шард, 1-я репл 
  shard21:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
      - mongos_router
    container_name: shard21
    restart: always
    ports:
      - "27040:27018"
    networks:
      app-network:
        ipv4_address: 173.17.2.8
    volumes:
      - shard21-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard2", #название шарда (replicaset'а)
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #2-й шард, 2-я репл 
  shard22:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
      - mongos_router
    container_name: shard22
    restart: always
    ports:
      - "27041:27018"
    networks:
      app-network:
        ipv4_address: 173.17.2.9
    volumes:
      - shard22-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard2", #название шарда (replicaset'а)
        "--bind_ip_all", 
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #2-й шард, 3-я репл 
  shard23:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
      - mongos_router
    container_name: shard23
    restart: always
    ports:
      - "27042:27018"
    networks:
      app-network:
        ipv4_address: 173.17.2.10
    volumes:
      - shard23-data:/data/db
    command:
      [
        "--shardsvr", #запуск в режиме шардинга
        "--replSet",
        "shard2", #название шарда (replicaset'а)
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #mongo-роутер
  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      - configSrv
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos", #обычная mongo в режиме роутера
        "--configdb", 
        "config_server/configSrv:27017", #передача данных сервера конфигурации
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  #redis
  redis_1:
    image: "redis:latest"
    container_name: redis_1
    ports:
      - "6379:6379"
    volumes:
      - redis_1_data:/data
    command: ["redis-server"]
    networks:
      app-network:
        ipv4_address: 173.17.3.8

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - configSrv
      - shard11
      - shard12
      - shard13
      - shard21
      - shard22
      - shard23
      - mongos_router
      - redis_1
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis_1:6379"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard11-data:
  shard12-data:
  shard13-data:
  shard21-data:
  shard22-data:
  shard23-data:
  redis_1_data: